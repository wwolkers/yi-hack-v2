diff -Naur onvif_srvd/src/onvif_srvd.c onvif_srvd.r/src/onvif_srvd.c
--- onvif_srvd/src/onvif_srvd.c	2019-09-25 18:10:13.003509013 +0200
+++ onvif_srvd.r/src/onvif_srvd.c	2018-10-12 16:35:49.000000000 +0200
@@ -51,6 +51,7 @@
         "       --width        [value] Set Width for Profile Media Services\n"
         "       --height       [value] Set Height for Profile Media Services\n"
         "       --url          [value] Set URL (or template URL) for Profile Media Services\n"
+        "       --snapurl      [value] Set URL (or template URL) for Snapshot\n"
         "                              in template mode %s will be changed to IP of interfase (see opt ifs)\n"
         "       --type         [value] Set Type for Profile Media Services (JPEG|MPEG4|H264)\n"
         "                              It is also a sign of the end of the profile parameters\n\n"
@@ -92,6 +93,7 @@
         width,
         height,
         url,
+        snapurl,
         type
     };
 }
@@ -130,6 +132,7 @@
     { "width",         required_argument, NULL, LongOpts::width        },
     { "height",        required_argument, NULL, LongOpts::height       },
     { "url",           required_argument, NULL, LongOpts::url          },
+    { "snapurl",       required_argument, NULL, LongOpts::snapurl      },
     { "type",          required_argument, NULL, LongOpts::type         },
 
     { NULL,           no_argument,       NULL,  0                      }
@@ -341,6 +344,13 @@
 
                         break;
 
+
+            case LongOpts::snapurl:
+                        if( !profile.set_snapurl(optarg) )
+                            daemon_error_exit("Can't set URL for Snapshot: %s\n", profile.get_cstr_err());
+
+                        break;
+
 
             case LongOpts::type:
                         if( !profile.set_type(optarg) )
diff -Naur onvif_srvd/src/ServiceContext.cpp onvif_srvd.r/src/ServiceContext.cpp
--- onvif_srvd/src/ServiceContext.cpp	2019-09-25 18:10:13.003509013 +0200
+++ onvif_srvd.r/src/ServiceContext.cpp	2018-10-12 20:36:35.000000000 +0200
@@ -100,6 +100,23 @@
 
 
 
+std::string ServiceContext::get_snapshot_uri(const std::string &profile_url, uint32_t client_ip) const
+{
+    std::string uri(profile_url);
+    std::string template_str("%s");
+
+
+    auto it = uri.find(template_str, 0);
+
+    if( it != std::string::npos )
+        uri.replace(it, template_str.size(), getServerIpFromClientIp(client_ip));
+
+
+    return uri;
+}
+
+
+
 tds__DeviceServiceCapabilities *ServiceContext::getDeviceServiceCapabilities(soap *soap)
 {
     tds__DeviceServiceCapabilities *capabilities = soap_new_tds__DeviceServiceCapabilities(soap);
@@ -309,6 +326,21 @@
 
 
 
+bool StreamProfile::set_snapurl(const char *new_val)
+{
+    if(!new_val)
+    {
+        str_err = "URL is empty";
+        return false;
+    }
+
+
+    snapurl = new_val;
+    return true;
+}
+
+
+
 bool StreamProfile::set_type(const char *new_val)
 {
     std::string new_type(new_val);
@@ -336,6 +368,7 @@
 {
     name.clear();
     url.clear();
+    snapurl.clear();
 
     width  = -1;
     height = -1;
diff -Naur onvif_srvd/src/ServiceContext.h onvif_srvd.r/src/ServiceContext.h
--- onvif_srvd/src/ServiceContext.h	2019-09-25 18:10:13.003509013 +0200
+++ onvif_srvd.r/src/ServiceContext.h	2018-10-12 20:35:49.000000000 +0200
@@ -19,11 +19,12 @@
 
         StreamProfile() { clear(); }
 
-        std::string  get_name  (void) const { return name;   }
-        int          get_width (void) const { return width;  }
-        int          get_height(void) const { return height; }
-        std::string  get_url   (void) const { return url;    }
-        int          get_type  (void) const { return type;   }
+        std::string  get_name   (void) const { return name;   }
+        int          get_width  (void) const { return width;  }
+        int          get_height (void) const { return height; }
+        std::string  get_url    (void) const { return url;    }
+        std::string  get_snapurl(void) const { return snapurl;}
+        int          get_type   (void) const { return type;   }
 
 
 
@@ -33,11 +34,12 @@
 
 
         //methods for parsing opt from cmd
-        bool set_name  (const char *new_val);
-        bool set_width (const char *new_val);
-        bool set_height(const char *new_val);
-        bool set_url   (const char *new_val);
-        bool set_type  (const char *new_val);
+        bool set_name   (const char *new_val);
+        bool set_width  (const char *new_val);
+        bool set_height (const char *new_val);
+        bool set_url    (const char *new_val);
+        bool set_snapurl(const char *new_val);
+        bool set_type   (const char *new_val);
 
 
         std::string get_str_err()  const { return str_err;         }
@@ -53,6 +55,7 @@
         int          width;
         int          height;
         std::string  url;
+        std::string  snapurl;
         int          type;
 
 
@@ -105,6 +108,7 @@
 
 
         std::string get_stream_uri(const std::string& profile_url, uint32_t client_ip) const;
+        std::string get_snapshot_uri(const std::string& profile_url, uint32_t client_ip) const;
 
 
         const std::map<std::string, StreamProfile> &get_profiles(void) { return profiles; }
diff -Naur onvif_srvd/src/ServiceMedia.cpp onvif_srvd.r/src/ServiceMedia.cpp
--- onvif_srvd/src/ServiceMedia.cpp	2019-09-25 18:10:13.003509013 +0200
+++ onvif_srvd.r/src/ServiceMedia.cpp	2018-10-12 20:36:19.000000000 +0200
@@ -642,8 +642,24 @@
 
 int MediaBindingService::GetSnapshotUri(_trt__GetSnapshotUri *trt__GetSnapshotUri, _trt__GetSnapshotUriResponse &trt__GetSnapshotUriResponse)
 {
-    DEBUG_MSG("Media: %s\n", __FUNCTION__);
-    return SOAP_OK;
+    DEBUG_MSG("Media: %s   for profile:%s\n", __FUNCTION__, trt__GetSnapshotUri->ProfileToken.c_str());
+
+
+    int ret = SOAP_FAULT;
+
+    ServiceContext* ctx = (ServiceContext*)this->soap->user;
+    auto profiles       = ctx->get_profiles();
+    auto it             = profiles.find(trt__GetSnapshotUri->ProfileToken);
+
+    if( it != profiles.end() )
+    {
+        trt__GetSnapshotUriResponse.MediaUri = soap_new_tt__MediaUri(this->soap);
+        trt__GetSnapshotUriResponse.MediaUri->Uri = ctx->get_snapshot_uri(it->second.get_snapurl(), htonl(this->soap->ip));
+        ret = SOAP_OK;
+    }
+
+
+    return ret;
 }
 
 
